#.github/workflows/deploy.yml
name: Deploy fba-frontend to VPS

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

env:
  # Docker Hub or GitHub Container Registry configuration
  REGISTRY: docker.io # Use 'ghcr.io' for GitHub Container Registry
  IMAGE_NAME: ${{ github.repository }} # e.g., 'your-github-user/your-repo-name'

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Corrected: Added space after colon
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha # Leverage GitHub Actions cache for faster builds
          cache-to: type=gha,mode=max # Store build cache for future runs

  deploy_to_vps:
    runs-on: ubuntu-latest
    needs: build_and_push_image # This job depends on the image being successfully built and pushed
    steps:
      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }} # SSH private key from GitHub Secrets

      - name: Deploy on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }} # VPS IP address or hostname from GitHub Secrets
          username: ${{ secrets.VPS_USER }} # SSH username from GitHub Secrets
          key: ${{ secrets.VPS_SSH_KEY }} # SSH private key from GitHub Secrets
          port: 22 # Default SSH port
          script: |
            # Define the application directory on the VPS
            # Ensure this directory exists and is accessible by the VPS_USER
            APP_DIR="/home/${{ secrets.VPS_USER }}/fba-frontend"
            mkdir -p "$APP_DIR"
            cd "$APP_DIR"

            # Create or update.env file from GitHub Secret
            # This file will be read by docker-compose for environment variables
            echo "${{ secrets.ENV_PRODUCTION }}" >.env

            # Pull the latest Docker image from the registry
            # Ensure Docker Compose is installed on the VPS
            # Ensure the docker-compose.yml file is present in $APP_DIR
            docker compose pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

            # Stop and remove any existing containers defined in docker-compose.yml
            # This ensures a clean restart with the new image
            docker compose down

            # Start new containers in detached mode
            docker compose up -d

            # Clean up old Docker images to free up disk space on the VPS
            docker image prune -f