name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Compress codebase
      run: tar -czf frontend.tar.gz --exclude='./.git' --exclude='./node_modules' --exclude='./.next' --exclude='frontend.tar.gz' .

    - name: Transfer compressed codebase to VPS
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        source: "frontend.tar.gz"
        target: "/tmp/frontend.tar.gz" # Transfer to a temporary location on VPS

    - name: Deploy on VPS
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          # Create deployment directory if it doesn't exist
          mkdir -p /var/www/fbafrontend
          
          # Move and decompress the archive
          mv /tmp/frontend.tar.gz /var/www/fbafrontend/
          cd /var/www/fbafrontend
          tar -xzf frontend.tar.gz
          rm frontend.tar.gz # Clean up the archive

          # Stop and remove existing containers
          docker compose down || true # Use docker compose down to stop services defined in docker-compose.yml
          
          # Build and run new containers
          docker compose up --build -d